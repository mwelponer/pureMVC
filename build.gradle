plugins {
    id 'java'
}

group 'eu.it.welponer.testPuremvc'
version '1.0'

sourceCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    
    // https://mvnrepository.com/artifact/org.puremvc/PureMVC_Java_MultiCore
	compile group: 'org.puremvc', name: 'PureMVC_Java_MultiCore', version: '1.0.7'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
	compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    //compile group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
    compile group: 'org.json', name: 'json', version: '20190722'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
}

//sourceSets {
//    main {
//        java{
//            srcDirs = ['src/main/java']
//            output.resourcesDir = 'build/classes/main'
////            output.classesDir = 'build/classes/main'
//        }
//    }
//}

group = "eu.it.welponer"
version = project.version

project.ext.mainClassName = "eu.it.welponer.testPuremvc.Main"

//////////////////////////
// testPuremvc JAR CREATION
task distTestPuremvc(type: Jar, dependsOn: classes) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}

    manifest {
        attributes(
                'Main-Class': project.mainClassName,
                "Implementation-Title": "eu.it.welponer.testPuremvc",
                "Implementation-Version": project.version,
                "Implementation-Vendor": "3DOM"
        )
    }

    baseName = 'testPuremvc'

    doLast {
        // Create batch
        File bat = new File(destinationDir, "testPuremvc-${project.version}.bat")
        destinationDir.mkdirs()

        bat.write('java -jar -Xmx4G -Xms4G ' + archiveName /*+ ' > output.log 2>&1'*/)

        // Create zip
        task(ziptestPuremvc, type: Zip){
            from (['build/libs/']){
                include("testPuremvc-${project.version}.jar", "testPuremvc-${project.version}.bat")
            }
            destinationDir file('build/dist/')

            archiveName = "testPuremvc-${project.version}.zip"
        }.execute();
    }
}
